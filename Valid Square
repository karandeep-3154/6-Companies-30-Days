class Solution {
public:

    double dist(vector<int>& a, vector<int>& b){

        return pow(a[0]-b[0],2)+pow(a[1]-b[1],2);

    }

    static bool cmp(vector<int>& a, vector<int>& b){

        if(a[0]!=b[0])
        return a[0]<b[0];

        return a[1]<b[1];

    }

    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        
        vector<vector<int>> p = {p1,p2,p3,p4};
        sort(p.begin(),p.end(),cmp);
      
        bool isvalid = dist(p[0],p[3]) != 0 and dist(p[0],p[3]) == dist(p[1],p[2]) and dist(p[0],p[1]) == dist(p[1],p[3]) and dist(p[1],p[3]) == dist(p[3],p[2]) and dist(p[3],p[2]) == dist(p[0],p[2]) and dist(p[0],p[2]) == dist(p[1],p[0]); 

        return isvalid;
    }
};
